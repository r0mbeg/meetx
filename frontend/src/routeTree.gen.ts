/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as SignInImport } from './routes/sign-in'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedEventsLayoutImport } from './routes/_authenticated/events/_layout'
import { Route as AuthenticatedEventsLayoutIndexImport } from './routes/_authenticated/events/_layout/index'
import { Route as AuthenticatedEventsLayoutCreateImport } from './routes/_authenticated/events/_layout/create'
import { Route as AuthenticatedEventsLayoutEventidImport } from './routes/_authenticated/events/_layout/$eventid'

// Create Virtual Routes

const AuthenticatedEventsImport = createFileRoute('/_authenticated/events')()

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedEventsRoute = AuthenticatedEventsImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedEventsLayoutRoute = AuthenticatedEventsLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthenticatedEventsRoute,
} as any)

const AuthenticatedEventsLayoutIndexRoute =
  AuthenticatedEventsLayoutIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedEventsLayoutRoute,
  } as any)

const AuthenticatedEventsLayoutCreateRoute =
  AuthenticatedEventsLayoutCreateImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => AuthenticatedEventsLayoutRoute,
  } as any)

const AuthenticatedEventsLayoutEventidRoute =
  AuthenticatedEventsLayoutEventidImport.update({
    id: '/$eventid',
    path: '/$eventid',
    getParentRoute: () => AuthenticatedEventsLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/events': {
      id: '/_authenticated/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof AuthenticatedEventsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/events/_layout': {
      id: '/_authenticated/events/_layout'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof AuthenticatedEventsLayoutImport
      parentRoute: typeof AuthenticatedEventsRoute
    }
    '/_authenticated/events/_layout/$eventid': {
      id: '/_authenticated/events/_layout/$eventid'
      path: '/$eventid'
      fullPath: '/events/$eventid'
      preLoaderRoute: typeof AuthenticatedEventsLayoutEventidImport
      parentRoute: typeof AuthenticatedEventsLayoutImport
    }
    '/_authenticated/events/_layout/create': {
      id: '/_authenticated/events/_layout/create'
      path: '/create'
      fullPath: '/events/create'
      preLoaderRoute: typeof AuthenticatedEventsLayoutCreateImport
      parentRoute: typeof AuthenticatedEventsLayoutImport
    }
    '/_authenticated/events/_layout/': {
      id: '/_authenticated/events/_layout/'
      path: '/'
      fullPath: '/events/'
      preLoaderRoute: typeof AuthenticatedEventsLayoutIndexImport
      parentRoute: typeof AuthenticatedEventsLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedEventsLayoutRouteChildren {
  AuthenticatedEventsLayoutEventidRoute: typeof AuthenticatedEventsLayoutEventidRoute
  AuthenticatedEventsLayoutCreateRoute: typeof AuthenticatedEventsLayoutCreateRoute
  AuthenticatedEventsLayoutIndexRoute: typeof AuthenticatedEventsLayoutIndexRoute
}

const AuthenticatedEventsLayoutRouteChildren: AuthenticatedEventsLayoutRouteChildren =
  {
    AuthenticatedEventsLayoutEventidRoute:
      AuthenticatedEventsLayoutEventidRoute,
    AuthenticatedEventsLayoutCreateRoute: AuthenticatedEventsLayoutCreateRoute,
    AuthenticatedEventsLayoutIndexRoute: AuthenticatedEventsLayoutIndexRoute,
  }

const AuthenticatedEventsLayoutRouteWithChildren =
  AuthenticatedEventsLayoutRoute._addFileChildren(
    AuthenticatedEventsLayoutRouteChildren,
  )

interface AuthenticatedEventsRouteChildren {
  AuthenticatedEventsLayoutRoute: typeof AuthenticatedEventsLayoutRouteWithChildren
}

const AuthenticatedEventsRouteChildren: AuthenticatedEventsRouteChildren = {
  AuthenticatedEventsLayoutRoute: AuthenticatedEventsLayoutRouteWithChildren,
}

const AuthenticatedEventsRouteWithChildren =
  AuthenticatedEventsRoute._addFileChildren(AuthenticatedEventsRouteChildren)

interface AuthenticatedRouteRouteChildren {
  AuthenticatedEventsRoute: typeof AuthenticatedEventsRouteWithChildren
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedEventsRoute: AuthenticatedEventsRouteWithChildren,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/events': typeof AuthenticatedEventsLayoutRouteWithChildren
  '/events/$eventid': typeof AuthenticatedEventsLayoutEventidRoute
  '/events/create': typeof AuthenticatedEventsLayoutCreateRoute
  '/events/': typeof AuthenticatedEventsLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/events': typeof AuthenticatedEventsLayoutIndexRoute
  '/events/$eventid': typeof AuthenticatedEventsLayoutEventidRoute
  '/events/create': typeof AuthenticatedEventsLayoutCreateRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/_authenticated/events': typeof AuthenticatedEventsRouteWithChildren
  '/_authenticated/events/_layout': typeof AuthenticatedEventsLayoutRouteWithChildren
  '/_authenticated/events/_layout/$eventid': typeof AuthenticatedEventsLayoutEventidRoute
  '/_authenticated/events/_layout/create': typeof AuthenticatedEventsLayoutCreateRoute
  '/_authenticated/events/_layout/': typeof AuthenticatedEventsLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/sign-in'
    | '/sign-up'
    | '/events'
    | '/events/$eventid'
    | '/events/create'
    | '/events/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/sign-in'
    | '/sign-up'
    | '/events'
    | '/events/$eventid'
    | '/events/create'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/sign-in'
    | '/sign-up'
    | '/_authenticated/events'
    | '/_authenticated/events/_layout'
    | '/_authenticated/events/_layout/$eventid'
    | '/_authenticated/events/_layout/create'
    | '/_authenticated/events/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/about",
        "/sign-in",
        "/sign-up"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/events"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/_authenticated/events": {
      "filePath": "_authenticated/events",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/events/_layout"
      ]
    },
    "/_authenticated/events/_layout": {
      "filePath": "_authenticated/events/_layout.tsx",
      "parent": "/_authenticated/events",
      "children": [
        "/_authenticated/events/_layout/$eventid",
        "/_authenticated/events/_layout/create",
        "/_authenticated/events/_layout/"
      ]
    },
    "/_authenticated/events/_layout/$eventid": {
      "filePath": "_authenticated/events/_layout/$eventid.tsx",
      "parent": "/_authenticated/events/_layout"
    },
    "/_authenticated/events/_layout/create": {
      "filePath": "_authenticated/events/_layout/create.tsx",
      "parent": "/_authenticated/events/_layout"
    },
    "/_authenticated/events/_layout/": {
      "filePath": "_authenticated/events/_layout/index.tsx",
      "parent": "/_authenticated/events/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
